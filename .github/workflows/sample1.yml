name: Shell Command

on:
  #schedule:
  # - cron: '0/10 * * * *'
  push:
    branches:
      - "main"
  pull_request:
   types: [closed,assigned,opened,reopened]
env:
  WF_VARIABLE: this is a sample workflow
  OWNER_NAME: ${{secrets.OWNER_NAME}}
jobs:
  #first Job
  run-shell-command:
    runs-on: ubuntu-latest
    env:
      JOB_VARIABLE: this is a workflow job
    steps:
        - name: echo a string
          env:
            STEP_VARIABLE: this is a step in the job
          run: |
            echo "Hello World"
            echo "The Workflow Description is '${WF_VARIABLE}'"
            echo "The Job Description is '${JOB_VARIABLE}'"
            echo "The Step Description is '${STEP_VARIABLE}'"
            echo "The Code Repository is '${GITHUB_REPOSITORY}'"
            echo "The Owner Name is '${OWNER_NAME}'"
            echo "Hello Mars"
            echo "Hello Jupiter"
            echo "Hello Old Jupiter"
        - name: multiplescript
          run: |
           node -v
           npm -v
  
  run-windows-command:
    #second Job
    runs-on: windows-latest
    needs: ["run-shell-command"]
    steps:
      - name: Directory Powershell
        run: Get-Location
      - name: Directory Bash
        run: pwd
        shell: bash
  
  #run-decryption:
    #thirdjob
    #runs-on: ubuntu-latest
    #steps:
     # - uses: actions/checkout@v1
     # - name: decrpting file
     #   run: gpg --quiet --batch --yes --decrypt demo.json.gpg --passphrase="${PASSPHRASE}" --output $HOME/demo.json #demo.json.gpg
     #   env:
     #    PASSPHRASE: ${{secrets.PASSPHRASE}}
     # - name: Print our file context
     #   run: cat $HOME/demo.json
  
  #this job would dump all the contexts been available
  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
  
  if-demo:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: echo my Repository
        run: eccho ${GITHUB_REPOSITORY}
      - name: echo my variable
        if: faliure()
        run: echo ${WF_VARIABLE}
      - name: echo my message
        if: always()
        run: echo "Hello World"


          
